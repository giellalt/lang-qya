!! =================================== !
!! The Quenya morphophonological/twol rules file !
!! =================================== !

Alphabet
    a b c d e f g h i j k l m n o p q r s t u v w x y
    á é í ó ú ä ë ï ö ü þ ñ %{w%}

    A B C D E F G H I J K L M N O P Q R S T U V W X Y
    Á É Í Ó Ú Ä Ë Ï Ö Ü Þ Ñ

    ! things to automatically convert (unless otherwise specified below)
    %>:0 %>:e

    %{stemd20%}:d %{stemt20%}:t %{stemm2n%}:m %{stems20%}:s %{stemn20%}:n
    %{stemu2o%}:u
    %{steme2é%}:e %{stemi2í%}:i

    %{i%}:i
    %{o%}:o
    %{%-V%}:0
    %{l%}:l

    %{strongi%}:i

;

! allowed initial consonant clusters: x, ps, ty, ny, ly, qu, ñw (became nw)
! allowed medial consonant clusters: ht, lc, ld, lf, lm, lp, lqu, lt, lv, lw, ly, mb, mn, mp, my, nc, nd, ng, nt, nw (ñw initial only), ny, ps, pt, qu, rc, rd, rm, rn, rp, rt, rs, rv, rw, ry, sc, st, sw, ts, tw, ty, x=cs, pp, tt, cc, mm, nn, ss, ll, rr
! allowed final consonants: n, r, l, s, t, nt

Sets
    ShortVowel = a e i o u ä ë ï ö ü
                 A E I O U Ä Ë Ï Ö Ü ;
    LongVowel = á é í ó ú
                Á É Í Ó Ú ;
    Vowel = ShortVowel LongVowel ;

    Consonant = b c d f g h l m n ñ p q r s þ t v w x y %{w%}
                B C D F G H L M N Ñ P Q R S Þ T V W X Y ;
    CannotStartMedialCluster = b d f g ñ q v w %{w%} x y ;


Definitions
    ConsonantCluster = [:Consonant :Consonant] | x ;  ! x is really cs


Rules

"Convert cu to qu when followed by a vowel, if the u is a u->o stem"
    c:q <=> _ %{stemu2o%}:u :0* :Vowel ;
"Convert cw to qu, part 1: w->u after a c"
    %{w%}:u <=> c: _ ;
"Convert cw to qu, part 2: c->q before a w"
    c:q <=> _ %{w%}: ;

"Plural endings with -i- delete a preceding e,i"
    Vx:0 <=> :0* _ %>:0 %{i%}: ;
        where Vx in (e i) ;
"Genitive ending {O} deletes a preceding a,o"
    Vx:0 <=> :0* _ %>:0 %{o%}: ;
        where Vx in (a o) ;
"Deleting a short vowel from a triggered deletion"  ! {strongi} should not be included here
    Vx:0 <=> :0* _ %>:0 %{%-V%}: ;
        where Vx in (ShortVowel) ;
"A 'strong i' is deleted iff followed by another i"
    %{strongi%}:0 <=> _ :0* :i ;

"Stems that alter when no suffix is attached"
    [ %{stemd20%}:0 | %{stemt20%}:0 | %{stems20%}:0 | %{stemn20%}:0 |
      %{stemm2n%}:n | %{stemu2o%}:o | %{steme2é%}:é | %{stemi2í%}:í ]
        <=> _ ?* %>: :0* .#. ;

"Assimilate r to l when at a morpheme boundary"
    r:l <=> :Vowel _ %>: %{l%}: ;
"Optionally assimilate n,s to l when at a morpheme boundary"
    [ n:l | s:l ] => :Vowel _ %>: %{l%}: ;

"Situations that force the morpheme boundary to become 0"
    %>:e /<= :Vowel :0* _ ;  _ :0* :Vowel ;  ! adjacent vowel on either side
            :Vowel [:l - l:] _ %{l%}: :Vowel ;  ! assimilation happened (ended as l, but didn't start as l)
            _ :0* .#. ;  ! there's nothing after the boundary
"Situations that force the morpheme boundary to become e"
    %>:0 /<= ConsonantCluster _ :Consonant ;  :Consonant _ ConsonantCluster ;  ! consonant cluster on either side
            :Consonant _ :Consonant .#. ;  ! any consonant cluster, if not followed by a vowel
            :Vowel [[r: | n: | s:] - :l] _ %{l%}: ;  ! assimilation could've happened, but didn't
            :CannotStartMedialCluster _ :Consonant ;  ! prevents things like gn,gl,gt, etc.
"Situations that force the morpheme boundary to become e; bad phonotactics"
    %>:0 /<= :Cx :0* _ :0* :Cy ;  where
                Cx in (c c c c     h h h h     l l   m m m m     n n   p p p     r   s s   þ þ   t t)
                Cy in (n l t %{w%} n s l %{w%} n s   s l t %{w%} s l   n l %{w%} l   n l   n l   n l)
                matched ;
    ! the above pairs are illegal consonant clusters, out of only those that end with n s l t %{w%} (case endings could start with those)
    ! it also doesn't include pairs starting with a symbol in CannotStartMedialCluster, since those are already taken care of
