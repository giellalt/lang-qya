! Script for underlying form (Latq) to Latin (Latn) for Quenya

define Vowel [a|e|i|o|u|á|é|í|ó|ú];
define InputAlphabet [q|w|%{w%}|e|é|r|t|y|u|ú|i|í|o|ó|p|a|á|s|þ|d|f|g|h|j|k|l|z|x|c|v|b|n|ñ|m];
define OutputAlphabetAddition [ä|ë|ï|ö|ü];
define FullAlphabet [InputAlphabet|OutputAlphabetAddition];
define WordBoundary [\FullAlphabet | .#.];


define WilyaRule1 [ %{w%} -> v || WordBoundary _ ];
define WilyaRule2 [ %{w%} -> v || Vowel _ Vowel ];
define WilyaRule3 [ %{w%} -> w ];

define SuleRule [ þ -> s ];
define NgoldoRule [ ñ -> n ];

# diaeresis
define FinalENotAloneRule [ e -> ë || Vowel ?* _ WordBoundary ];
define NotDiphthongERule1 [ e -> ë || _ [a|o] ];
define NotDiphthongERule2 [ e -> ë || o _ ];
define CapitalEARule [ a -> ä || E _ ];
define CapitalEORule [ o -> ö || E _ ];

read regex [
    WilyaRule1  .o.
    WilyaRule2  .o.
    WilyaRule3  .o.
    SuleRule    .o.
    NgoldoRule  .o.
    FinalENotAloneRule  .o.
    NotDiphthongERule1  .o.
    NotDiphthongERule2  .o.
    CapitalEARule   .o.
    CapitalEORule
];
